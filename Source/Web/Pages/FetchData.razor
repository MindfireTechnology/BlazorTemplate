@page "/fetchdata"
@inject HttpClient Http

<h1>Weather forecast</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{

    <MudTable Items="forecasts" Hover="true" Breakpoint="Breakpoint.Sm">
		<HeaderContent>
			<MudTh>Date</MudTh>
			<MudTh>Temp. (C)</MudTh>
			<MudTh>Temp. (F)</MudTh>
			<MudTh>Summary</MudTh>
		</HeaderContent>
		<RowTemplate Context="forecast">
			<MudTh>@forecast.Date.ToShortDateString()</MudTh>
			<MudTh>@forecast.TemperatureC</MudTh>
			<MudTh>@forecast.TemperatureF</MudTh>
			<MudTh>@forecast.Summary</MudTh>
		</RowTemplate>
    </MudTable>
}

@code
{
	private WeatherForecast[] forecasts;

	protected override async Task OnInitializedAsync()
	{
		forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>($"api/weatherforecast/get");
	}

	public class WeatherForecast
	{
		public DateTime Date { get; set; }

		public int TemperatureC { get; set; }

		public string Summary { get; set; }

		public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
	}
}
